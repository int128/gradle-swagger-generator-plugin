plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.18.0'
}

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation 'com.github.fge:json-schema-validator:2.2.6'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0'

    testImplementation('org.spockframework:spock-core:2.0-groovy-3.0') {
        exclude module: 'groovy-all'
    }
    testRuntimeOnly 'cglib:cglib-nodep:3.3.0'
}

group = 'org.hidetake'
version = System.getenv('VERSION') ?: 'SNAPSHOT'

pluginBundle {
    website = 'https://github.com/int128/gradle-swagger-generator-plugin'
    vcsUrl = 'https://github.com/int128/gradle-swagger-generator-plugin'
    tags = ['swagger', 'api', 'generator']
}

gradlePlugin {
    plugins {
        swaggerPlugin {
            id = 'org.hidetake.swagger.generator'
            displayName = 'Gradle Swagger Generator Plugin'
            description = 'Gradle plugin for OpenAPI YAML validation, code generation and API document publishing'
            implementationClass = 'org.hidetake.gradle.swagger.generator.SwaggerGeneratorPlugin'
        }
    }
}

allprojects {
    afterEvaluate {
        tasks.withType(Test) {
            finalizedBy ':testReport'
            testReport.reportOn binaryResultsDirectory
            reports.html.enabled = false
            reports.junitXml.destination = file("${rootProject.buildDir}/test-results")
        }
    }
}

task testReport(type: TestReport) {
    description 'Generates test report for all projects'
    destinationDir = file("$buildDir/reports")
}
